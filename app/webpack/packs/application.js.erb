window.stripePublishableKey = '<%= Settings.stripe.publishable_key %>';
window.algoliasearchApplicationId = '<%= Settings.algoliasearch.application_id %>';
window.algoliasearchSearchKey = '<%= Settings.algoliasearch.search_key %>';

import Rails from 'rails-ujs';
window.Rails = Rails;
Rails.start();

// import 'ahoy.js';

import Turbolinks from 'turbolinks';
Turbolinks.start();

import 'turbolinks-animate';
document.addEventListener( 'turbolinks:load', () => {
    TurbolinksAnimate.init({ element: document.querySelector('body.turbolinks-animate') });
})

import NativeGap from 'nativegap';
document.addEventListener( 'DOMContentLoaded', () => {
    const nativegap = new NativeGap;
})

const instantsearch = require('instantsearch');
const search = instantsearch({
    appId: algoliasearchApplicationId,
    apiKey: algoliasearchSearchKey,
    indexName: getParameter('tab')[0].toUpperCase() + getParameter('tab').substring(1),
    urlSync: true
});
search.start();

import AOS from 'aos';
AOS.init();

import $ from 'jquery';
window.jQuery = window.$ = $;
require('jquery-flexdatalist/jquery.flexdatalist');
$('input.flexdatalist').flexdatalist();
$('input.flexdatalist[data-units]').on( 'change:flexdatalist', ( event, set, options ) => {
    let unitsEl = $(this).data('units'),
        unitsUrl = 'app/quantities/' + set.value + '/units_of_measurement.json?locale=' + $('p#lang').text();
    $(unitsEl).data( 'data', unitsUrl );
    $(unitsEl).flexdatalist();
    $(unitsEl).attr( 'disabled', 'false' );
});

import MathJax from 'mathjax/MathJax';
MathJax.Hub.Queue(['Typeset', MathJax.Hub]);

import './../javascripts/myg/index';

// import './../javascripts/packages/apps/show';


import './../stylesheets/index';



function getParameter(name) {
    return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search) || [null, ''])[1].replace(/\+/g, '%20')) || null;
}
